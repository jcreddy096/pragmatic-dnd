{
  "version": 3,
  "sources": ["../../@atlaskit/pragmatic-drag-and-drop/dist/esm/public-utils/element/custom-native-drag-preview/set-custom-native-drag-preview.js"],
  "sourcesContent": ["import { monitorForElements } from '../../../adapter/element-adapter';\nimport { isSafari } from '../../../util/is-safari';\nimport { maxZIndex } from '../../../util/max-z-index';\n\n/** A function to remove the element that has been added to the `container`.\n * @example () => ReactDOM.unmountComponentAtNode(container)\n */\n\n/** A function that will render a preview element into a `container` `HTMLElement` */\n\n/** By default we use the build in values for the native drag preview: {x: 0, y: 0} */\nfunction defaultOffset() {\n  return {\n    x: 0,\n    y: 0\n  };\n}\n\n/** This function provides the ability to mount an element for it to be used as the native drag preview\n *\n * @example\n * draggable({\n *  onGenerateDragPreview: ({ nativeSetDragImage }) => {\n *    setCustomNativeDragPreview({\n *      render: ({ container }) => {\n *        ReactDOM.render(<Preview item={item} />, container);\n *        return () => ReactDOM.unmountComponentAtNode(container);\n *      },\n *      nativeSetDragImage,\n *    });\n *    },\n * });\n */\nexport function setCustomNativeDragPreview(_ref) {\n  var render = _ref.render,\n    nativeSetDragImage = _ref.nativeSetDragImage,\n    _ref$getOffset = _ref.getOffset,\n    getOffset = _ref$getOffset === void 0 ? defaultOffset : _ref$getOffset;\n  var container = document.createElement('div');\n  Object.assign(container.style, {\n    // Ensuring we don't cause reflow when adding the element to the page\n    // Using `position:fixed` rather than `position:absolute` so we are\n    // positioned on the current viewport.\n    // `position:fixed` also creates a new stacking context, so we don't need to do that here\n    position: 'fixed',\n    // According to `mdn`, the element can be offscreen:\n    // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage#imgelement\n    //\n    // However, that  information does not appear in the specs:\n    // https://html.spec.whatwg.org/multipage/dnd.html#dom-datatransfer-setdragimage-dev\n    //\n    // If the element is _completely_ offscreen, Safari@17.1 will cancel the drag\n    top: 0,\n    left: 0,\n    // Using maximum possible z-index so that this element will always be on top\n    // https://stackoverflow.com/questions/491052/minimum-and-maximum-value-of-z-index\n    // Did not use `layers` in `@atlaskit/theme` because:\n    // 1. This element is not a 'layer' in the conventional sense, as this element\n    //    is only created for a single frame for the browser to take a photo of it,\n    //    and then it is destroyed\n    // 2. Did not want to add a dependency onto `@atlaskit/theme`\n    // 3. Want to always be on top of product UI which might have higher z-index's\n    zIndex: maxZIndex,\n    // Avoiding any additional events caused by the new element (being super safe)\n    pointerEvents: 'none'\n  });\n  document.body.append(container);\n  var unmount = render({\n    container: container\n  });\n\n  /**\n   * Some frameworks (eg `react`) don't render into the container until the next microtask.\n   * - This will run before the browser takes it's picture of the element\n   * - This will run before the animation frame that removes `container`.\n   * */\n\n  queueMicrotask(function () {\n    var previewOffset = getOffset({\n      container: container\n    });\n\n    /**\n     * **Problem**\n     * On `Safari@17.1` if a drag preview element has some opacity,\n     * Safari will include elements behind the drag preview element\n     * in the drag preview.\n     * Bug: https://bugs.webkit.org/show_bug.cgi?id=266025\n     *\n     * **Fix**\n     * We push the drag preview so it is _almost_ completely offscreen so that\n     * there won't be any elements behind the drag preview element.\n     * If the element is _completely_ offscreen, then the drag is cancelled by Safari.\n     *\n     * Using `-0.0001` so that any potential \"see through\" on the drag preview element\n     * is effectively invisible ðŸ‘»\n     *\n     * **Unsuccessful alternatives**\n     * Setting a background color (eg \"white\") on the `container`\n     * â†’ Wrecks the opacity of the drag preview element\n     *\n     * Adding a parent element of the `container` with a background color (eg \"white\")\n     * â†’ Wrecks the opacity of the drag preview element\n     */\n    if (isSafari()) {\n      var rect = container.getBoundingClientRect();\n\n      // We cannot apply this fix if nothing has been rendered into the `container`\n      if (rect.width === 0) {\n        return;\n      }\n      container.style.left = \"-\".concat(rect.width - 0.0001, \"px\");\n    }\n    nativeSetDragImage === null || nativeSetDragImage === void 0 || nativeSetDragImage(container, previewOffset.x, previewOffset.y);\n  });\n  function cleanup() {\n    unbindMonitor();\n    unmount === null || unmount === void 0 || unmount();\n    document.body.removeChild(container);\n  }\n  var unbindMonitor = monitorForElements({\n    // Remove portal in the dragstart event so that the user will never see it\n    onDragStart: cleanup,\n    // Backup: remove portal when the drop finishes (this would be an error case)\n    onDrop: cleanup\n  });\n}"],
  "mappings": ";;;;;;;;;;;;AAWA,SAAS,gBAAgB;AACvB,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACF;AAiBO,SAAS,2BAA2B,MAAM;AAC/C,MAAI,SAAS,KAAK,QAChB,qBAAqB,KAAK,oBAC1B,iBAAiB,KAAK,WACtB,YAAY,mBAAmB,SAAS,gBAAgB;AAC1D,MAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,SAAO,OAAO,UAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAK7B,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQV,KAAK;AAAA,IACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASN,QAAQ;AAAA;AAAA,IAER,eAAe;AAAA,EACjB,CAAC;AACD,WAAS,KAAK,OAAO,SAAS;AAC9B,MAAI,UAAU,OAAO;AAAA,IACnB;AAAA,EACF,CAAC;AAQD,iBAAe,WAAY;AACzB,QAAI,gBAAgB,UAAU;AAAA,MAC5B;AAAA,IACF,CAAC;AAwBD,QAAI,SAAS,GAAG;AACd,UAAI,OAAO,UAAU,sBAAsB;AAG3C,UAAI,KAAK,UAAU,GAAG;AACpB;AAAA,MACF;AACA,gBAAU,MAAM,OAAO,IAAI,OAAO,KAAK,QAAQ,MAAQ,IAAI;AAAA,IAC7D;AACA,2BAAuB,QAAQ,uBAAuB,UAAU,mBAAmB,WAAW,cAAc,GAAG,cAAc,CAAC;AAAA,EAChI,CAAC;AACD,WAAS,UAAU;AACjB,kBAAc;AACd,gBAAY,QAAQ,YAAY,UAAU,QAAQ;AAClD,aAAS,KAAK,YAAY,SAAS;AAAA,EACrC;AACA,MAAI,gBAAgB,mBAAmB;AAAA;AAAA,IAErC,aAAa;AAAA;AAAA,IAEb,QAAQ;AAAA,EACV,CAAC;AACH;",
  "names": []
}
